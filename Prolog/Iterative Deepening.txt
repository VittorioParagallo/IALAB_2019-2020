Iterative Deepening

Abbiamo implementato Iterative Deepening utilizzando una ricerca in profondità (DFS) limitata con incrmento di soglia.
L'algoritmo è suddiviso in "helper method" (iterative_deepening_aux) e "wrapper method" (iterative_deepening);
il metodo wrapper serve solamente per il calcolo del massimo numero di iterazioni (che nel nostro caso è pari al numero di caselle libere) e per lanciare il core dell'algoritmo iterative_deepening_aux.
iterative_deepening_aux è suddiviso in due parti:

1. La parte ricorsiva dove viene esplorato lo spazio degli stati (nel caso la DFS non trovasse soluzione, la soglia viene incrementata di 1 e si fa ripartire la ricerca in profondità). (COMPLETEZZA)
2. La parte dove si verifica se la ricerca è giunta ad uno stato finale. (CORRETTEZZA e OTTIMALITA')

La Soglia viene settata inizialmente a 0.
Il resto dell'algoritmo risulta essere la classica ricerca in profondità limitata.
